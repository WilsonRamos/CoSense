#
#		Physical invariant for heat transfer between a hot sphere and the environment
#
#		Necessary variables: 
#
#		R : Radius of the sphere
#
#		T : Temperature difference between the sphere and the environment 
#
#		g : Acceleration of gravity 
#
#	\rho  : Fluid density
#
#	\nu   : Kinematic viscosity
#
#	 C_p  : Specific heat  
#
#  \alpha : Thermal diffusivity
#
#   \beta : Thermal expansion
#

time : signal =
{
	name = "second" English
	symbol = "s";
	derivation = none;
}

distance : signal(i: 0 to 2) =
{
	name = "meter" English
	symbol = "m";
	derivation = none;
}

mass : signal =
{
	name = "kilogram" English
	symbol = "kg";
	derivation = none;
}


speed : signal(i: 0 to 2) =
{
	derivation = distance@i / time;
}

acceleration : signal(i: 0 to 2) =
{
	derivation = speed@i / time;
}

force : signal(i: 0 to 2) = 
{
	name = "Newton" English
	symbol = "N" ;
	derivation = mass * acceleration@i;
}

work : signal(i: 0 to 2) = 
{
	name = "Joule" English
	symbol = "J";
	derivation = force * distance@i;
}

temperature : signal = 
{ 
	name = "Kelvin" English 
	symbol = "K"; 
	derivation = none;
}


g : constant = 9.8 * m ** 2 * s ** -2;
rho : constant = 1 * kg * m ** -3;
v : constant = 10 * m ** 2 * s ** -1;
cp : constant = 1 * m ** 2 * s ** -2 * K ** -1;
a : constant = 1 * m ** 2 * s ** -1;
b : constant = 1 * K ** -1;


#
#		Dimensional Matrix:
#
#
#		R  T  g  r  v  c  a  b
#	 L  0  0  0  1  0  0  0  0
#	 M  1  0  1 -3  2  2  2  0
#	 T  0  0 -2  0 -1 -2 -1  0
#	 O  0  1  0  0  0 -1  0 -1
#
#
#		z = null(A,'r')
#
#



hotSphere : invariant(Q: work@0, t: temperature, r: distance) =
{
    Q ~ (b * g * t * r ** 3 / (v ** 2)) 
 
}

