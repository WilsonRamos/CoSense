# Compile and run at src/noisy/noisyCompileAndRunCoro.sh

fib : module (valueType : type)
{
        fibonacci : function (nil) -> (output: valueType);
        readInt32 : function (nil) -> (out : int32);
        printInt32 : function (x : int32) -> (out : int32);
        init	: function (nil) -> (x : int32);
}

fibonacci : function (nil) -> (output: valueType) =
{
        a : valueType;
        b : valueType;
        n : valueType;

        a = 0;
        b = 1;
        n = b;

        iterate
        {
                true => 
                {
                        output <-= n;
                        n = a + b;
                        a = b;
                        b = n;
                }
        };
}


init : function (nil) -> (x : int32) =
{
        i : int32;
        n : int32;
	fibRet : int32;

        n = readInt32();

        f := load fib->fibonacci (int32) (path fib);

        i = 0;

        iterate
        {
                i < n => 
                {
                        fibRet = <-f;
                        nil = printInt32(x : fibRet);
                        i+=1;
                }
        };
	return (x : 0);
}
